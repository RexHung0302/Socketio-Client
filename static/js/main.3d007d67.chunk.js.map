{"version":3,"sources":["logo.svg","App.tsx","pages/Lobby/DrawerContent.tsx","pages/Lobby/index.tsx","assets/images/bg.png","assets/images/defaultUser.png","pages/ChatRoom/index.tsx","routers/index.ts","routers/RouteWithSubRoutes.tsx","pages/index/index.tsx","reportWebVitals.ts","index.tsx"],"names":["App","history","useHistory","data","useContext","StateContext","useState","openSnackbar","setOpenSnackbar","className","src","logo","alt","Stack","spacing","TextField","id","label","variant","placeholder","helperText","state","name","error","onChange","e","setState","preVal","target","value","Button","onClick","push","style","backgroundColor","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","autoHideDuration","Alert","severity","sx","width","DrawerContent","toggleDrawer","userNumber","openCreateModalHandler","Box","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","display","flexDirection","fontSize","Divider","ws","emit","ContainerDivStyled","styled","div","Lobby","bottomDrawer","setBottomDrawer","snackbar","setSnackbar","loading","setLoading","setUserNumber","chatRooms","setChatRooms","isDialogOpen","setIsDialogOpen","newChatRoom","setNewChatRoom","useEffect","selectChatRoom","newSocket","io","process","transports","uuidv4","console","log","initWebSocket","useCallback","once","message","setTimeout","on","dataInfo","text","toggleDialogHandler","undefined","desc","Drawer","anchor","Dialog","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","type","fullWidth","DialogActions","userId","map","chatRoom","idx","pathname","joinChatRoomHandler","bgPng","routers","path","component","exact","moment","require","inputMsg","setInputMsg","messages","setMessages","roomId","disconnectChatRoomHandler","create_at","renderMessageHandler","defaultUser","color","format","modeInfo","mode","RouteWithSubRoutes","route","render","props","routes","createContext","Index","chatRoomInfo","isLogout","Provider","basename","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d007d67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useContext, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useHistory } from \"react-router\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\n\nimport { StateContext } from \"./pages/index\";\nimport { Alert, Snackbar } from \"@mui/material\";\n\nfunction App() {\n  const history = useHistory();\n  const data = useContext(StateContext);\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Stack spacing={3}>\n          <TextField\n            id=\"name\"\n            label=\"您的大名\"\n            variant=\"standard\"\n            placeholder=\"輸入名稱進入聊天\"\n            helperText={data?.state?.name === \"\" ? \"名稱為必填\" : \"\"}\n            error={data?.state.name === \"\" ? true : false}\n            onChange={(e) => {\n              data?.setState(\n                (preVal) =>\n                  (preVal = {\n                    ...preVal,\n                    name: e.target.value,\n                  })\n              );\n            }}\n          />\n          <Stack spacing={1}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                if (data?.state.name) {\n                  history.push(\"/lobby\");\n                }\n              }}\n            >\n              進入聊天室\n            </Button>\n            <Button\n              style={{\n                backgroundColor: \"#00c300\",\n              }}\n              variant=\"contained\"\n              onClick={() => {\n                setOpenSnackbar(true);\n              }}\n            >\n              Line Login\n            </Button>\n            <Button\n              style={{\n                backgroundColor: \"#1877f2\",\n              }}\n              variant=\"contained\"\n              onClick={() => {\n                setOpenSnackbar(true);\n              }}\n            >\n              Facebook Login\n            </Button>\n          </Stack>\n        </Stack>\n      </header>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={openSnackbar}\n        onClose={() => setOpenSnackbar(false)}\n        key={0}\n        autoHideDuration={2000}\n      >\n        <Alert\n          onClose={() => setOpenSnackbar(false)}\n          severity=\"info\"\n          sx={{ width: \"100%\" }}\n        >\n          功能尚未開放!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { StateContext } from \"../index\";\n\n// Components\nimport {\n  ListItem,\n  ListItemIcon,\n  List,\n  Box,\n  ListItemText,\n  Divider,\n} from \"@mui/material\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PeopleIcon from \"@material-ui/icons/People\";\n\n// TS\ninterface Props {\n  toggleDrawer: () => void;\n  userNumber: number;\n  openCreateModalHandler: () => void;\n}\n\n// 抽屜內容\nconst DrawerContent: React.FC<Props> = ({\n  toggleDrawer,\n  userNumber,\n  openCreateModalHandler,\n}: Props) => {\n  const data = useContext(StateContext);\n  const history = useHistory();\n\n  return (\n    <Box\n      role=\"presentation\"\n      onClick={() => toggleDrawer()}\n      onKeyDown={() => toggleDrawer()}\n    >\n      <List>\n        <ListItem button key={0}>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary={`目前線上人數：${userNumber}`} />\n        </ListItem>\n        <ListItem button key={1}>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <ListItemText primary={data?.state.name} />\n            <span\n              style={{\n                fontSize: \"12px\",\n              }}\n            >{`id：${data?.state.id}`}</span>\n          </div>\n        </ListItem>\n        <Divider />\n        <ListItem button key={2}>\n          <ListItemIcon>\n            <MessageIcon />\n          </ListItemIcon>\n          <ListItemText\n            primary=\"新增聊天室\"\n            onClick={() => openCreateModalHandler()}\n          />\n        </ListItem>\n        <ListItem\n          button\n          key={3}\n          onClick={() => {\n            if (data?.state.ws) {\n              data.state.ws.emit(\"disconnectLobby\", {\n                id: data.state.id,\n              });\n            }\n            history.push(\"/\");\n          }}\n        >\n          <ListItemIcon>\n            <ExitToAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"離開聊天室\" />\n        </ListItem>\n      </List>\n    </Box>\n  );\n};\n\nexport default DrawerContent;\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { useHistory } from \"react-router\";\nimport { chatRoomInfoType, StateContext } from \"../index\";\n\n// Components\nimport DrawerContent from \"./DrawerContent\";\nimport {\n  Alert,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Drawer,\n  Snackbar,\n  TextField,\n} from \"@mui/material\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport styled from \"styled-components\";\n\nconst ContainerDivStyled = styled.div`\n  .header {\n    position: relative;\n    background-color: #00d8ff;\n    color: #fff;\n    text-align: center;\n    padding: 10px;\n    letter-spacing: 5px;\n    width: 80%;\n    margin: 0 auto;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    .addIcon {\n      position: absolute;\n      right: 10px;\n      text-align: center;\n      top: 8px;\n      cursor: pointer;\n    }\n  }\n\n  .body {\n    width: 80%;\n    margin: 0 auto;\n    padding: 10px;\n    display: flex;\n    flex-wrap: wrap;\n    .chatRoom {\n      min-width: 200px;\n      margin: 5px;\n      border: 1.5px solid #000;\n      border-radius: 10px;\n      transition: all 0.3s ease-in-out;\n      cursor: pointer;\n      animation: borderChange 0.3s linear;\n      @media (max-width: 530px) {\n        width: 100%;\n      }\n      h3 {\n        text-align: center;\n        margin: 5px;\n        border-bottom: 1.5px solid #000;\n      }\n      .desc {\n        padding: 5px;\n        font-size: 12px;\n        margin: 0;\n      }\n      &:hover {\n        background-color: #e8e8e8;\n      }\n      &:active {\n        transform: scale(0.9);\n      }\n    }\n  }\n`;\n\nconst Lobby: React.FC = () => {\n  const history = useHistory();\n  const data = useContext(StateContext);\n  const [bottomDrawer, setBottomDrawer] = useState<boolean>(false);\n  const [snackbar, setSnackbar] = useState<{\n    open: boolean;\n    severity: \"error\" | \"warning\" | \"info\" | \"success\";\n    message?: string;\n  }>({\n    open: false,\n    severity: \"info\",\n  });\n  const [loading, setLoading] = useState<boolean>(false);\n  const [userNumber, setUserNumber] = useState<number>(0);\n  const [chatRooms, setChatRooms] = useState<chatRoomInfoType[] | []>([]);\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\n  const [newChatRoom, setNewChatRoom] = useState<{\n    name?: string;\n    desc?: string;\n  }>();\n\n  // Init\n  useEffect(\n    () => {\n      if (!data?.state.name) {\n        history.push(\"/\");\n      } else if (!data?.state.ws && !data?.state.selectChatRoom) {\n        setLoading((preVal: any) => (preVal = true));\n\n        const newSocket = io(\n          process.env.REACT_APP_API_DOMAIN\n            ? process.env.REACT_APP_API_DOMAIN\n            : \"http://localhost:3000\",\n          {\n            transports: [\"websocket\"],\n          }\n        );\n\n        if (data?.setState) {\n          data.setState(\n            (preVal) =>\n              (preVal = {\n                ...preVal,\n                ws: newSocket,\n                id: uuidv4(),\n              })\n          );\n        }\n      } else if (data.state.ws && data.state.name) {\n        data.state.ws.emit(\"updateInfo\");\n      }\n\n      // 這邊不能用 Return 不然進入房間也會觸發這邊然後清掉 WS\n      // return () => {\n      //   console.log(\"newSocket.close()\");\n\n      //   newSocket.close();\n      // };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  // 監聽 WS\n  useEffect(\n    () => {\n      if (data?.state.ws) {\n        //連線成功在 console 中打印訊息\n        console.log(\"success connect!\");\n        //設定監聽\n        initWebSocket();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data?.state.ws]\n  );\n\n  // WS Function\n\n  const initWebSocket = useCallback(\n    () => {\n      data?.setState(\n        (preVal) =>\n          (preVal = {\n            ...preVal,\n          })\n      );\n\n      if (data?.state.ws) {\n        if (!data.state.selectChatRoom) {\n          // 傳送 login 到 Socket.io\n          data.state.ws.emit(\"login\", {\n            id: data?.state.id,\n            name: data?.state.name,\n          });\n        }\n\n        // 連線成功\n        data.state.ws.once(\"connectionSuccess\", (data) => {\n          setSnackbar(\n            (preVal) =>\n              (preVal = {\n                open: true,\n                severity: \"success\",\n                message: data.message,\n              })\n          );\n\n          setTimeout(() => {\n            setSnackbar(\n              (preVal) =>\n                (preVal = {\n                  ...preVal,\n                  open: false,\n                })\n            );\n          }, 2000);\n\n          setLoading((preVal: any) => (preVal = false));\n        });\n\n        // 連線失敗\n        data.state.ws.once(\"connectionFail\", (data) => {\n          setSnackbar(\n            (preVal) =>\n              (preVal = {\n                open: true,\n                severity: \"error\",\n                message: data.message,\n              })\n          );\n          setTimeout(() => {\n            history.push(\"/\");\n          }, 1000);\n        });\n\n        // 更新線上人數\n        data.state.ws.on(\"updateInfo\", (data) => {\n          setUserNumber(data.userNumber);\n          setChatRooms(data.chatRooms);\n        });\n\n        // 接收個人訊息\n        data.state.ws.on(\"personalAnnouncement\", (dataInfo) => {\n          const { data } = dataInfo;\n\n          setSnackbar(\n            (preVal) =>\n              (preVal = {\n                open: true,\n                severity:\n                  data.text === \"新增成功\"\n                    ? \"success\"\n                    : data.text === \"新增失敗\"\n                    ? \"error\"\n                    : \"info\",\n                message: data.text,\n              })\n          );\n\n          setTimeout(() => {\n            setSnackbar(\n              (preVal) =>\n                (preVal = {\n                  ...preVal,\n                  open: false,\n                })\n            );\n          }, 2000);\n        });\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data?.state.ws]\n  );\n\n  // 加入聊天室\n  const joinChatRoomHandler = (chatRoom: chatRoomInfoType) => {\n    data?.setState(\n      (preVal) =>\n        (preVal = {\n          ...preVal,\n          selectChatRoom: chatRoom,\n        })\n    );\n\n    history.push({\n      pathname: `/chat-room/${chatRoom.id}`,\n    });\n  };\n\n  // 開關抽屜\n  const toggleDrawer = () => {\n    setBottomDrawer((bottomDrawer) => (bottomDrawer = !bottomDrawer));\n  };\n\n  // 開啟關閉新增聊天室彈窗\n  const toggleDialogHandler = () => {\n    setIsDialogOpen(!isDialogOpen);\n    setNewChatRoom({\n      name: undefined,\n      desc: undefined,\n    });\n  };\n\n  return (\n    <ContainerDivStyled>\n      {loading ? (\n        <></>\n      ) : (\n        <>\n          <header className=\"header\">\n            <label className=\"title\">Lobby</label>\n            <MenuIcon\n              className=\"addIcon\"\n              onClick={() => toggleDrawer()}\n            ></MenuIcon>\n            <Drawer\n              anchor=\"bottom\"\n              open={bottomDrawer}\n              onClose={() => toggleDrawer()}\n            >\n              <DrawerContent\n                toggleDrawer={toggleDrawer}\n                userNumber={userNumber}\n                openCreateModalHandler={() => toggleDialogHandler()}\n              ></DrawerContent>\n            </Drawer>\n\n            <Dialog open={isDialogOpen} onClose={() => toggleDialogHandler()}>\n              <DialogTitle>新增聊天室</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  請遵守不犯法，不色情，且盡情地聊天吧！\n                </DialogContentText>\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"chatRoomName\"\n                  label=\"聊天室名稱\"\n                  type=\"chatRoomName\"\n                  fullWidth\n                  variant=\"standard\"\n                  onChange={(e) => {\n                    setNewChatRoom(\n                      (preVal) =>\n                        (preVal = {\n                          ...preVal,\n                          name: e.target.value,\n                        })\n                    );\n                  }}\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"chatRoomDesc\"\n                  label=\"聊天室敘述\"\n                  type=\"chatRoomDesc\"\n                  fullWidth\n                  variant=\"standard\"\n                  onChange={(e) => {\n                    setNewChatRoom(\n                      (preVal) =>\n                        (preVal = {\n                          ...preVal,\n                          desc: e.target.value,\n                        })\n                    );\n                  }}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => toggleDialogHandler()}>取消</Button>\n                <Button\n                  onClick={() => {\n                    if (!data?.state.id && !newChatRoom?.name) return;\n\n                    if (data?.state.ws) {\n                      data.state.ws.emit(\"createNewChatRoom\", {\n                        userId: data.state.id,\n                        ...newChatRoom,\n                      });\n                    }\n\n                    toggleDialogHandler();\n                  }}\n                >\n                  創建\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </header>\n\n          <section className=\"body\">\n            {chatRooms.map((chatRoom, idx) => {\n              return (\n                <div\n                  className=\"chatRoom\"\n                  key={idx}\n                  onClick={() => joinChatRoomHandler(chatRoom)}\n                >\n                  <div className=\"chatRoom__content\">\n                    <h3>\n                      {chatRoom.name}({chatRoom.userNumber})\n                    </h3>\n                    <p className=\"desc\">{chatRoom.desc}</p>\n                  </div>\n                </div>\n              );\n            })}\n          </section>\n        </>\n      )}\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={snackbar.open}\n        onClose={() =>\n          setSnackbar(\n            (preVal) =>\n              (preVal = {\n                ...preVal,\n                open: false,\n              })\n          )\n        }\n        key={0}\n        autoHideDuration={2000}\n      >\n        <Alert\n          onClose={() =>\n            setSnackbar(\n              (preVal) =>\n                (preVal = {\n                  ...preVal,\n                  open: false,\n                })\n            )\n          }\n          severity={snackbar.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </ContainerDivStyled>\n  );\n};\n\nexport default Lobby;\n","export default __webpack_public_path__ + \"static/media/bg.658d320a.png\";","export default __webpack_public_path__ + \"static/media/defaultUser.b55ae646.png\";","import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport styled from \"styled-components\";\n\nimport { chatRoomInfoType, StateContext } from \"../index\";\n\n// Components\nimport ArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport ArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport bgPng from \"../../assets/images/bg.png\";\nimport { MessageType } from \"./ChatRoom\";\nimport defaultUser from \"../../assets/images/defaultUser.png\";\n\nconst ContainerDivStyled = styled.div`\n  display: grid;\n  grid-template-rows: 60px auto 50px;\n  height: 100vh;\n  .header {\n    width: 100%;\n    height: 60px;\n    color: #fff;\n    background-color: rgb(34, 42, 62);\n    position: fixed;\n    top: 0;\n    display: grid;\n    grid-template-columns: 80px 1fr 80px;\n    z-index: 2;\n    .title {\n      text-align: center;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    &__icon {\n      display: flex;\n      align-items: center;\n      &:last-child {\n        justify-content: space-around;\n      }\n    }\n  }\n  .body {\n    position: relative;\n    height: calc(100vh - 110px);\n    padding: 60px 0 50px 0;\n    background-image: url(${bgPng});\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n    overflow-y: auto;\n    overscroll-behavior: none;\n    .msgBox {\n      &__ul {\n        display: flex;\n        padding: 10px;\n        list-style: none;\n        margin: 0;\n      }\n      &__profile {\n        margin: 2px;\n        width: 50px;\n        height: 50px;\n        background-color: #fff;\n        border-radius: 50%;\n        overflow: hidden;\n        .img {\n          width: 100%;\n          height: 100%;\n          display: inline-block;\n          object-fit: cover;\n        }\n      }\n      &__body {\n        position: relative;\n        padding-left: 5px;\n        flex-shrink: 100;\n        .name {\n          font-size: 12px;\n          color: #fff;\n          margin-bottom: 4px;\n        }\n        .msg {\n          background-color: #fff;\n          border-radius: 10px;\n          padding: 5px;\n          font-size: 14px;\n          margin-left: 8px;\n          position: relative;\n          &:after {\n            content: \"\";\n            display: inline-block;\n            position: absolute;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            border-width: 6.5px 12px 6.5px 0;\n            border-color: transparent #fff transparent transparent;\n            left: -10px;\n            top: 12px;\n          }\n        }\n      }\n      &__date {\n        font-size: 12px;\n        display: flex;\n        align-items: flex-end;\n        padding-left: 5px;\n        color: #fff;\n        flex-shrink: 40;\n      }\n      &-user {\n        ul {\n          flex-direction: row-reverse;\n        }\n        .msgBox__body {\n          padding-right: 5px;\n          .name {\n            text-align: right;\n          }\n          .msg {\n            margin-right: 8px;\n            background-color: rgb(134, 217, 123);\n            &:after {\n              border-width: 6.5px 0 6.5px 12px;\n              border-color: transparent transparent transparent\n                rgb(134, 217, 123);\n              left: auto;\n              right: -10px;\n              top: 12px;\n            }\n          }\n        }\n      }\n      &-announcement {\n        text-align: center;\n        padding: 5px;\n        color: #fff;\n        > div {\n          padding: 10px;\n          background-color: #00000030;\n          display: inline-block;\n          border-radius: 50px;\n          font-size: 14px;\n        }\n      }\n    }\n  }\n  .footer {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 40px;\n    background-color: #fff;\n    z-index: 2;\n    display: grid;\n    grid-template-columns: 100px 1fr 40px;\n    padding: 5px 0;\n    &__icon {\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      color: #807777;\n    }\n    .input {\n      border: none;\n      background-color: #eeeeee;\n      border-radius: 20px;\n      padding: 0 10px;\n      &:focus {\n        outline: none;\n      }\n    }\n  }\n`;\n\nconst ChatRoom: React.FC = () => {\n  const history = useHistory();\n  const data = useContext(StateContext);\n  const moment = require(\"moment\");\n  const [inputMsg, setInputMsg] = useState(\"\");\n  const [messages, setMessages] = useState<MessageType[] | []>([]);\n  const loading = useState(false)[0];\n\n  // 初始化\n  useEffect(\n    () => {\n      if (!data?.state.id || !data?.state.name || !data?.state.selectChatRoom) {\n        history.push(\"/lobby\");\n      }\n\n      if (data?.state.ws && data?.state.selectChatRoom) {\n        data.state.ws.emit(\"joinChatRoom\", {\n          id: data.state.id,\n          name: data.state.name,\n          roomId: data.state.selectChatRoom.id,\n        });\n\n        // 初始化事件\n        initWebSocket();\n      }\n\n      return () => {\n        disconnectChatRoomHandler();\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  // 初始化\n  const initWebSocket = () => {\n    if (data?.state.ws && data?.state.selectChatRoom) {\n      // 該房間的事件監聽\n      data.state.ws.on(\"roomMsgEmit\", (dataInfo: MessageType) => {\n        const { id, name, data, create_at } = dataInfo;\n        setMessages((preVal) => [\n          ...preVal,\n          {\n            id,\n            name,\n            data,\n            create_at,\n          },\n        ]);\n      });\n\n      // 公告監聽\n      data.state.ws.on(\"announcement\", (dataInfo: MessageType) => {\n        const { id, name, data, create_at } = dataInfo;\n        setMessages((preVal) => [\n          ...preVal,\n          {\n            id,\n            name,\n            data,\n            create_at,\n          },\n        ]);\n      });\n\n      // 人數監聽\n      data.state.ws.on(\"updateRoomInfo\", (dataInfo: chatRoomInfoType) => {\n        data.setState(\n          (preVal) =>\n            (preVal = {\n              ...preVal,\n              selectChatRoom: dataInfo,\n            })\n        );\n      });\n    }\n  };\n\n  // 離開房間\n  const disconnectChatRoomHandler = () => {\n    if (data?.state.ws && data.state.selectChatRoom) {\n      data.state.ws.emit(\"disconnectChatRoom\", {\n        id: data.state.id,\n        name: data.state.name,\n        roomId: data.state.selectChatRoom.id,\n      });\n    }\n  };\n\n  // 渲染對話\n  const renderMessageHandler = (message: MessageType) => {\n    switch (message.data.type) {\n      case \"text\":\n        return (\n          <ul className=\"msgBox__ul\">\n            <li className=\"msgBox__profile\">\n              <img className=\"img\" src={defaultUser} alt=\"User Profile\" />\n            </li>\n            <li className=\"msgBox__body\">\n              <div className=\"name\">{message.name}</div>\n              <div className=\"msg\">{message.data.text}</div>\n            </li>\n            <li className=\"msgBox__date\">{message.create_at}</li>\n          </ul>\n        );\n      case \"image\":\n        return (\n          <ul className=\"msgBox__ul\">\n            <li className=\"msgBox__profile\">\n              <img className=\"img\" src={defaultUser} alt=\"User Profile\" />\n            </li>\n            <li className=\"msgBox__body\">\n              <div className=\"name\">{message.name}</div>\n              <div className=\"msg\">尚未支援圖片</div>\n            </li>\n            <li className=\"msgBox__date\">{message.create_at}</li>\n          </ul>\n        );\n      case \"voice\":\n        return (\n          <ul className=\"msgBox__ul\">\n            <li className=\"msgBox__profile\">\n              <img className=\"img\" src={defaultUser} alt=\"User Profile\" />\n            </li>\n            <li className=\"msgBox__body\">\n              <div className=\"name\">{message.name}</div>\n              <div className=\"msg\">尚未支援圖片</div>\n            </li>\n            <li className=\"msgBox__date\">{message.create_at}</li>\n          </ul>\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <ContainerDivStyled>\n      <header className=\"header\">\n        <span className=\"header__icon\">\n          <ArrowLeftIcon\n            className=\"cursor-pointer\"\n            onClick={() => {\n              history.push(\"/lobby\");\n            }}\n          />\n        </span>\n        <span className=\"title\">\n          {data?.state.selectChatRoom\n            ? data?.state.selectChatRoom.name\n            : \"unKnow Room Name\"}\n          (\n          {data?.state.selectChatRoom?.userNumber\n            ? data.state.selectChatRoom?.userNumber\n            : \"unKnow\"}\n          )\n        </span>\n        <div className=\"header__icon\">\n          <CallIcon className=\"cursor-pointer\" />\n          <ArrowDownIcon className=\"cursor-pointer\" />\n        </div>\n      </header>\n      <section className=\"body\">\n        {messages.map((message, idx) => {\n          if (message.id === \"announcement\") {\n            return (\n              <div className=\"msgBox-announcement\" key={message.id + idx}>\n                <div>\n                  {message.data.type === \"text\"\n                    ? message.data.text\n                    : \"TODO: 公告現在只支援文字\"}\n                </div>\n              </div>\n            );\n          } else {\n            return (\n              <div\n                className={`${\n                  message.id === data?.state.id\n                    ? \"msgBox-user\"\n                    : \"msgBox-others\"\n                } msgBox`}\n                key={idx}\n              >\n                {renderMessageHandler(message)}\n              </div>\n            );\n          }\n        })}\n      </section>\n      <section className=\"footer\">\n        <div className=\"footer__icon\">\n          <AddIcon className=\"cursor-pointer\" />\n          <PhotoCameraIcon className=\"cursor-pointer\" />\n          <ImageIcon className=\"cursor-pointer\" />\n        </div>\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Aa\"\n          onChange={(e) => {\n            setInputMsg((preVal) => (preVal = e.target.value));\n          }}\n          value={inputMsg}\n        />\n        <div className=\"footer__icon\">\n          {inputMsg ? (\n            <SendIcon\n              className=\"cursor-pointer\"\n              style={{\n                color: \"#6682ec\",\n              }}\n              onClick={() => {\n                if (!inputMsg || loading) return;\n\n                if (data?.state.ws && data.state.selectChatRoom) {\n                  data.state.ws.emit(\"clientSendMessage\", {\n                    id: data.state.id,\n                    name: data.state.name,\n                    data: {\n                      type: \"text\",\n                      text: inputMsg,\n                    },\n                    create_at: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n                    modeInfo: {\n                      mode: \"room\",\n                      roomId: data.state.selectChatRoom.id,\n                    },\n                  });\n                }\n                setInputMsg((preVal) => (preVal = \"\"));\n              }}\n            />\n          ) : (\n            <MicIcon className=\"cursor-pointer\" />\n          )}\n        </div>\n      </section>\n    </ContainerDivStyled>\n  );\n};\n\nexport default ChatRoom;\n","import App from \"../App\";\nimport Lobby from \"../pages/Lobby\";\nimport ChatRoom from \"../pages/ChatRoom\";\n\n//TS\nexport type routeType = {\n  path: string;\n  component: any;\n  exact?: boolean;\n  routes?: routeType[];\n};\n\nconst routers = [\n  {\n    path: \"/\",\n    component: App,\n    exact: true,\n  },\n  {\n    path: \"/lobby\",\n    component: Lobby,\n    exact: true,\n  },\n  {\n    path: \"/chat-room/:id\",\n    component: ChatRoom,\n    exact: true,\n  },\n];\n\nexport default routers;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// TS\nimport { routeType } from \".\";\n\nconst RouteWithSubRoutes = (route: routeType) => {\n  return (\n    <Route\n      {...route}\n      path={route.path}\n      render={(props) => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n};\n\nexport default RouteWithSubRoutes;\n","import React, { createContext, useState } from \"react\";\n\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { Socket } from \"socket.io-client\";\nimport routers from \"../../routers/index\";\nimport RouteWithSubRoutes from \"../../routers/RouteWithSubRoutes\";\n\n// TS\ninterface StateType {\n  name: string | null;\n  id?: string;\n  ws?: Socket;\n  chatRoomInfo: chatRoomInfoType[] | [];\n  selectChatRoom?: chatRoomInfoType;\n  isLogout: boolean;\n}\n\nexport type chatRoomInfoType = {\n  id: string;\n  name: string;\n  desc: string;\n  userNumber: number;\n};\n\nexport const StateContext = createContext<{\n  state: StateType;\n  setState: React.Dispatch<React.SetStateAction<StateType>>;\n} | null>(null);\n\nconst Index: React.FC = () => {\n  const [state, setState] = useState<StateType>({\n    name: null,\n    chatRoomInfo: [],\n    isLogout: false,\n  });\n  return (\n    <StateContext.Provider\n      value={{\n        state,\n        setState,\n      }}\n    >\n      <Router basename=\"/Socketio-Client\">\n        <Switch>\n          {routers.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))}\n        </Switch>\n      </Router>\n    </StateContext.Provider>\n  );\n};\n\nexport default Index;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Index from \"./pages/index\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}